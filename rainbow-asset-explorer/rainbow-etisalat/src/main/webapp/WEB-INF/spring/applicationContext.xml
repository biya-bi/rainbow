<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="org.rainbow" />
	<context:annotation-config />
	<tx:annotation-driven transaction-manager="rainbowSecurityTransactionManager" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="WEB-INF/application.properties" />
	</bean>

	<bean id="loginBean" name="loginBean"
		class="org.rainbow.asset.explorer.faces.controllers.AuthenticationController"
		scope="prototype">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="userDetailsService" ref="jdbcUserDetailsService" />
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg name="key" value="${remember.me.key}" />
		<constructor-arg name="userDetailsService" ref="jdbcUserDetailsService" />
		<property name="alwaysRemember" value="true" />
		<property name="tokenValiditySeconds" value="1800" />
	</bean>

	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg name="key" value="${remember.me.key}" />
	</bean>

	<bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
		<constructor-arg name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="jdbcUserDetailsService" class="org.rainbow.security.core.jdbc.JdbcUserDetailsService">
		<constructor-arg name="applicationName" value="${application.name}" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
		<property name="enableAuthorities" value="false" />
		<property name="enableGroups" value="true" />
	</bean>

	<bean id="usernamePasswordAuthenticationProvider"
		class="org.rainbow.security.core.authentication.UsernamePasswordAuthenticationProvider">
		<constructor-arg name="applicationName" value="${application.name}" />
		<constructor-arg name="userDetailsService" ref="jdbcUserDetailsService" />
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
		<constructor-arg name="passwordAttemptUpdater">
			<bean class="org.rainbow.security.core.jdbc.PasswordAttemptUpdaterImpl">
				<constructor-arg name="applicationName" value="${application.name}" />
				<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
				<property name="dataSource" ref="rainbowSecurityDataSource" />
			</bean>
		</constructor-arg>
		<property name="hideUserNotFoundExceptions" value="false" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="16" />
	</bean>

	<bean id="sensitiveUserDetailsEncrypter"
		class="org.rainbow.security.core.jdbc.SensitiveUserDetailsEncrypter"
		init-method="encrypt" depends-on="rainbowSecurityDataSource">
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
		<constructor-arg name="applicationName" value="${application.name}" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${rainbow.asset.explorer.jdbc.driverClassName}" />
		<property name="url" value="${rainbow.asset.explorer.jdbc.url}" />
		<property name="username" value="${rainbow.asset.explorer.jdbc.user}" />
		<property name="password" value="${rainbow.asset.explorer.jdbc.password}" />
	</bean>

	<bean id="rainbowSecurityDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${rainbow.security.jdbc.driverClassName}" />
		<property name="url" value="${rainbow.security.jdbc.url}" />
		<property name="username" value="${rainbow.security.jdbc.user}" />
		<property name="password" value="${rainbow.security.jdbc.password}" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath*:META-INF/assetExplorerPersistence.xml</value>
				<value>classpath*:META-INF/securityPersistence.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="dataSource" value-ref="dataSource" />
				<entry key="rainbowSecurityDataSource" value-ref="rainbowSecurityDataSource" />
			</map>
		</property>
		<property name="defaultPersistenceUnitRootLocation" value="classpath:" />
	</bean>

	<bean id="rainbowAssetExplorerEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="RainbowAssetExplorerPersistenceUnit" />
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>org.rainbow</value>
			</list>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.logging.level" value="ALL" />
				<entry key="javax.persistence.schema-generation.database.action"
					value="none" />
				<entry key="eclipselink.weaving" value="false" />
				<entry key="eclipselink.logging.parameters" value="true" />
				<entry key="javax.persistence.jdbc.driver" value="${rainbow.asset.explorer.jdbc.driverClassName}" />
				<entry key="javax.persistence.jdbc.user" value="${rainbow.asset.explorer.jdbc.user}" />
				<entry key="javax.persistence.jdbc.password" value="${rainbow.asset.explorer.jdbc.password}" />
				<entry key="javax.persistence.jdbc.url" value="${rainbow.asset.explorer.jdbc.url}" />
			</map>
		</property>
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
			</bean>
		</property>
	</bean>

	<bean id="rainbowSecurityEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="RainbowSecurityPersistenceUnit" />
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
		<property name="packagesToScan">
			<list>
				<value>org.rainbow</value>
			</list>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.logging.level" value="ALL" />
				<entry key="javax.persistence.schema-generation.database.action"
					value="drop-and-create" />
				<entry key="eclipselink.weaving" value="false" />
				<entry key="eclipselink.logging.parameters" value="true" />
				<entry key="javax.persistence.jdbc.driver" value="${rainbow.security.jdbc.driverClassName}" />
				<entry key="javax.persistence.jdbc.user" value="${rainbow.security.jdbc.user}" />
				<entry key="javax.persistence.jdbc.password" value="${rainbow.security.jdbc.password}" />
				<entry key="javax.persistence.jdbc.url" value="${rainbow.security.jdbc.url}" />
			</map>
		</property>
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
			</bean>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->

	<bean id="rainbowAssetExplorerTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="rainbowAssetExplorerEntityManagerFactory" />
	</bean>

	<bean id="rainbowSecurityTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="rainbowSecurityEntityManagerFactory" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${mail.smtp.host.name}</value>
		</property>
		<property name="port">
			<value>${mail.smtp.host.port}</value>
		</property>
		<property name="username">
			<value>${mail.smtp.username}</value>
		</property>
		<property name="password">
			<value>${mail.smtp.password}</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<!-- Use SMTP transport protocol -->
				<prop key="mail.transport.protocol">smtp</prop>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<!-- Use TLS to encrypt communication with SMTP server -->
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
				<prop key="mail.debug">${mail.debug}</prop>
			</props>
		</property>
	</bean>

	<bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="WEB-INF/quartz.properties" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="schedulerContextAsMap">
			<map>
				<entry key="entityManagerFactory" value-ref="rainbowAssetExplorerEntityManagerFactory" />
				<entry key="mailSender" value-ref="mailSender" />
				<entry key="applicationName" value="${application.name}" />
			</map>
		</property>
	</bean>

	<bean id="alertScheduler"
		class="org.rainbow.asset.explorer.core.scheduling.AlertSchedulerImpl" />

	<bean id="alertDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.AlertDaoImpl" />

	<bean id="assetDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.AssetDaoImpl" />

	<bean id="assetDocumentDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.AssetDocumentDaoImpl" />

	<bean id="assetTypeDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.AssetTypeDaoImpl" />

	<bean id="currencyDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.CurrencyDaoImpl" />

	<bean id="departmentDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.DepartmentDaoImpl" />

	<bean id="emailRecipientDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.EmailRecipientDaoImpl" />

	<bean id="emailTemplateDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.EmailTemplateDaoImpl" />

	<bean id="inventoryManager"
		class="org.rainbow.asset.explorer.core.persistence.dao.InventoryManagerImpl" />

	<bean id="localeDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.LocaleDaoImpl" />

	<bean id="locationDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.LocationDaoImpl" />

	<bean id="manufacturerDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.ManufacturerDaoImpl" />

	<bean id="productDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.ProductDaoImpl" />

	<bean id="productIssueDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.ProductIssueDaoImpl" />

	<bean id="productReceiptDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.ProductReceiptDaoImpl" />

	<bean id="purchaseOrderDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.PurchaseOrderDaoImpl" />

	<bean id="shipMethodDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.ShipMethodDaoImpl" />

	<bean id="shippingOrderDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.ShippingOrderDaoImpl" />

	<bean id="siteDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.SiteDaoImpl" />

	<bean id="siteDocumentDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.SiteDocumentDaoImpl" />


	<bean id="vendorDao"
		class="org.rainbow.asset.explorer.core.persistence.dao.VendorDaoImpl" />

	<bean id="alertService"
		class="org.rainbow.asset.explorer.core.service.AlertServiceImpl">
		<constructor-arg name="dao" ref="alertDao" />
	</bean>

	<bean id="assetDocumentService"
		class="org.rainbow.asset.explorer.core.service.AssetDocumentServiceImpl">
		<constructor-arg name="dao" ref="assetDocumentDao" />
	</bean>

	<bean id="assetService"
		class="org.rainbow.asset.explorer.core.service.AssetServiceImpl">
		<constructor-arg name="dao" ref="assetDao" />
	</bean>

	<bean id="assetTypeService"
		class="org.rainbow.asset.explorer.core.service.AssetTypeServiceImpl">
		<constructor-arg name="dao" ref="assetTypeDao" />
	</bean>

	<bean id="currencyService"
		class="org.rainbow.asset.explorer.core.service.CurrencyServiceImpl">
		<constructor-arg name="dao" ref="currencyDao" />
	</bean>

	<bean id="departmentService"
		class="org.rainbow.asset.explorer.core.service.DepartmentServiceImpl">
		<constructor-arg name="dao" ref="departmentDao" />
	</bean>

	<bean id="emailRecipientService"
		class="org.rainbow.asset.explorer.core.service.EmailRecipientServiceImpl">
		<constructor-arg name="dao" ref="emailRecipientDao" />
	</bean>

	<bean id="emailTemplateService"
		class="org.rainbow.asset.explorer.core.service.EmailTemplateServiceImpl">
		<constructor-arg name="dao" ref="emailTemplateDao" />
	</bean>

	<bean id="localeService"
		class="org.rainbow.asset.explorer.core.service.LocaleServiceImpl">
		<constructor-arg name="dao" ref="localeDao" />
	</bean>

	<bean id="locationService"
		class="org.rainbow.asset.explorer.core.service.LocationServiceImpl">
		<constructor-arg name="dao" ref="locationDao" />
	</bean>

	<bean id="manufacturerService"
		class="org.rainbow.asset.explorer.core.service.ManufacturerServiceImpl">
		<constructor-arg name="dao" ref="manufacturerDao" />
	</bean>

	<bean id="productIssueService"
		class="org.rainbow.asset.explorer.core.service.ProductIssueServiceImpl">
		<constructor-arg name="dao" ref="productIssueDao" />
	</bean>

	<bean id="productReceiptService"
		class="org.rainbow.asset.explorer.core.service.ProductReceiptServiceImpl">
		<constructor-arg name="dao" ref="productReceiptDao" />
	</bean>

	<bean id="productService"
		class="org.rainbow.asset.explorer.core.service.ProductServiceImpl">
		<constructor-arg name="dao" ref="productDao" />
	</bean>

	<bean id="purchaseOrderService"
		class="org.rainbow.asset.explorer.core.service.PurchaseOrderServiceImpl">
		<constructor-arg name="dao" ref="purchaseOrderDao" />
	</bean>

	<bean id="shipMethodService"
		class="org.rainbow.asset.explorer.core.service.ShipMethodServiceImpl">
		<constructor-arg name="dao" ref="shipMethodDao" />
	</bean>

	<bean id="shippingOrderService"
		class="org.rainbow.asset.explorer.core.service.ShippingOrderServiceImpl">
		<constructor-arg name="dao" ref="shippingOrderDao" />
	</bean>

	<bean id="siteDocumentService"
		class="org.rainbow.asset.explorer.core.service.SiteDocumentServiceImpl">
		<constructor-arg name="dao" ref="siteDocumentDao" />
	</bean>

	<bean id="siteService" class="org.rainbow.asset.explorer.core.service.SiteServiceImpl">
		<constructor-arg name="dao" ref="siteDao" />
	</bean>

	<bean id="vendorService"
		class="org.rainbow.asset.explorer.core.service.VendorServiceImpl">
		<constructor-arg name="dao" ref="vendorDao" />
	</bean>

	<bean id="userDao" class="org.rainbow.security.core.persistence.dao.UserDao">
		<constructor-arg name="applicationName" value="${application.name}" />
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="groupDao" class="org.rainbow.security.core.persistence.dao.GroupDao" />

	<bean id="authorityDao" class="org.rainbow.security.core.persistence.dao.AuthorityDao" />

	<bean id="userService" class="org.rainbow.security.core.service.UserServiceImpl">
		<constructor-arg name="dao" ref="userDao" />
	</bean>

	<bean id="applicationService" class="org.rainbow.security.core.service.ApplicationService">
		<constructor-arg name="dao">
			<bean class="org.rainbow.security.core.persistence.dao.ApplicationDao">
				<constructor-arg name="userDao" ref="userDao" />
				<constructor-arg name="groupDao" ref="groupDao" />
				<constructor-arg name="authorityDao" ref="authorityDao" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="groupService" class="org.rainbow.security.core.service.GroupService">
		<constructor-arg name="dao" ref="groupDao" />
	</bean>

	<bean id="userGroupService" class="org.rainbow.security.core.service.UserGroupServiceImpl">
		<constructor-arg name="dao">
			<bean class="org.rainbow.security.core.persistence.dao.UserGroupDaoImpl" />
		</constructor-arg>
	</bean>

</beans>