<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
				http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.3.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<context:component-scan base-package="org.rainbow" />
	<context:annotation-config />

	<bean id="productService" class="org.rainbow.shopping.cart.service.ProductService">
		<constructor-arg>
			<bean class="org.rainbow.shopping.cart.persistence.dao.ProductDao" />
		</constructor-arg>
	</bean>

	<bean id="categoryService" class="org.rainbow.shopping.cart.service.CategoryService">
		<constructor-arg>
			<bean class="org.rainbow.shopping.cart.persistence.dao.CategoryDao" />
		</constructor-arg>
	</bean>

	<bean id="orderService" class="org.rainbow.shopping.cart.service.OrderService">
		<constructor-arg>
			<bean class="org.rainbow.shopping.cart.persistence.dao.OrderDao" />
		</constructor-arg>
	</bean>

	<bean id="dataSource"
		class="com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource">
		<property name="url"
			value="jdbc:mysql://localhost:3306/rainbow_shopping_cart" />
		<property name="user" value="root" />
		<property name="password" value="Passw0rd" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="persistenceProviderClass" -->
		<!-- value="org.hibernate.jpa.HibernatePersistenceProvider" /> -->
		<!-- <property name="persistenceProviderClass" -->
		<!-- value="org.eclipse.persistence.jpa.PersistenceProvider" /> -->
		<property name="packagesToScan">
			<list>
				<value>org.rainbow</value>
			</list>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.logging.level" value="ALL" />
				<entry key="javax.persistence.schema-generation.database.action"
					value="drop-and-create" />
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>
		<!-- <property name="loadTimeWeaver"> -->
		<!-- <bean -->
		<!-- class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" 
			/> -->
		<!-- </property> -->
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
			</bean>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="loginBean" name="loginBean"
		class="org.rainbow.shopping.cart.ui.web.controller.AuthenticationController"
		scope="prototype">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="userDetailsService" ref="customjdbcUserService" />
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg name="key"
			value="rainbow-shopping-cart-remember-me" />
		<constructor-arg name="userDetailsService" ref="customjdbcUserService" />
		<property name="alwaysRemember" value="true" />
		<property name="tokenValiditySeconds" value="1800" />
	</bean>

	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg name="key"
			value="rainbow-shopping-cart-remember-me" />
	</bean>

	<bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
		<constructor-arg name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="customjdbcUserService"
		class="org.rainbow.shopping.cart.ui.web.security.jdbc.CustomJdbcDaoImpl">
		<property name="dataSource" ref="securityDataSource" />
		<property name="enableAuthorities" value="false" />
		<property name="enableGroups" value="true" />
		<property name="usersByUsernameQuery">
			<value>
				SELECT USER_NAME,
				PASSWORD, ENABLED FROM
				USERS WHERE
				USER_NAME =
				?
			</value>
		</property>
		<property name="authoritiesByUsernameQuery">
			<value>
				SELECT
				USER_NAME,ROLE_NAME from
				ROLES where USER_NAME = ?
			</value>
		</property>
		<property name="groupAuthoritiesByUsernameQuery">
			<value>
				SELECT
				g.GROUP_ID,
				g.GROUP_NAME,
				ga.AUTHORITY
				FROM
				GROUPS g,
				GROUP_AUTHORITIES ga,
				GROUP_MEMBERS gm,
				USERS u
				WHERE
				u.USER_NAME =
				? AND
				gm.USER_ID =
				u.ID AND
				gm.GROUP_ID =
				g.GROUP_ID AND
				ga.GROUP_ID =
				g.GROUP_ID
			</value>
		</property>
	</bean>


	<bean id="securityDataSource"
		class="com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource">
		<property name="url"
			value="jdbc:mysql://localhost:3306/rainbow_shopping_cart_security" />
		<property name="user" value="root" />
		<property name="password" value="Passw0rd" />
	</bean>

	<bean
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
		id="passwordEncoder">
		<constructor-arg name="strength" value="16" />
	</bean>

	<bean id="databasePasswordEncrypter"
		class="org.rainbow.shopping.cart.ui.web.security.jdbc.DbPasswordEncrypter"
		init-method="encryptDBPassword" depends-on="securityDataSource">
		<property name="passwordEncoder" ref="passwordEncoder" />
		<property name="dataSource" ref="securityDataSource" />
		<property name="selectQuery">
			<value>SELECT USER_NAME,
				PASSWORD, ENCRYPTED FROM
				USERS WHERE
				(ENCRYPTED='NO' ||
				ENCRYPTED IS NULL)
			</value>
		</property>
		<property name="updateQuery">
			<value>UPDATE USERS SET PASSWORD = ?, ENCRYPTED='YES'
				WHERE USER_NAME=
				?
			</value>
		</property>
	</bean>
</beans>