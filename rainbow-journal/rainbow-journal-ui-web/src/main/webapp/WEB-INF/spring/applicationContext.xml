<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
				http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.3.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<context:component-scan base-package="org.rainbow" />
	<context:annotation-config />

	<bean id="userDao" class="org.rainbow.security.core.persistence.dao.UserDao">
		<constructor-arg name="applicationName" value="${application.name}" />
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="groupDao" class="org.rainbow.security.core.persistence.dao.GroupDao" />

	<bean id="authorityDao" class="org.rainbow.security.core.persistence.dao.AuthorityDao" />

	<bean id="userService" class="org.rainbow.security.core.service.UserServiceImpl">
		<constructor-arg name="dao" ref="userDao" />
	</bean>

	<bean id="applicationService" class="org.rainbow.security.core.service.ApplicationService">
		<constructor-arg name="dao">
			<bean class="org.rainbow.security.core.persistence.dao.ApplicationDao">
				<constructor-arg name="userDao" ref="userDao" />
				<constructor-arg name="groupDao" ref="groupDao" />
				<constructor-arg name="authorityDao" ref="authorityDao" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="groupService" class="org.rainbow.security.core.service.GroupService">
		<constructor-arg name="dao" ref="groupDao" />
	</bean>

	<bean id="userGroupService" class="org.rainbow.security.core.service.UserGroupServiceImpl">
		<constructor-arg name="dao">
			<bean class="org.rainbow.security.core.persistence.dao.UserGroupDaoImpl" />
		</constructor-arg>
	</bean>

	<bean id="loginBean" name="loginBean"
		class="org.rainbow.journal.ui.web.controller.AuthenticationController"
		scope="prototype">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="userDetailsService" ref="jdbcUserDetailsService" />
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg name="key" value="rainbow-journal-remember-me" />
		<constructor-arg name="userDetailsService" ref="jdbcUserDetailsService" />
		<property name="alwaysRemember" value="true" />
		<property name="tokenValiditySeconds" value="1800" />
	</bean>

	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg name="key" value="rainbow-journal-remember-me" />
	</bean>

	<bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
		<constructor-arg name="rememberMeServices" ref="rememberMeServices" />
	</bean>

	<bean id="jdbcUserDetailsService" class="org.rainbow.security.core.jdbc.JdbcUserDetailsService">
		<constructor-arg name="applicationName" value="${application.name}" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
		<property name="enableAuthorities" value="false" />
		<property name="enableGroups" value="true" />
	</bean>

	<bean id="usernamePasswordAuthenticationProvider"
		class="org.rainbow.security.core.authentication.UsernamePasswordAuthenticationProvider">
		<constructor-arg name="applicationName" value="${application.name}" />
		<constructor-arg name="userDetailsService" ref="jdbcUserDetailsService" />
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
		<constructor-arg name="passwordAttemptUpdater">
			<bean class="org.rainbow.security.core.jdbc.PasswordAttemptUpdaterImpl">
				<constructor-arg name="applicationName" value="${application.name}" />
				<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
				<property name="dataSource" ref="rainbowSecurityDataSource" />
			</bean>
		</constructor-arg>
		<property name="hideUserNotFoundExceptions" value="false" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="16" />
	</bean>

	<bean id="sensitiveUserDetailsEncrypter"
		class="org.rainbow.security.core.jdbc.SensitiveUserDetailsEncrypter"
		init-method="encrypt" depends-on="rainbowSecurityDataSource">
		<constructor-arg name="passwordEncoder" ref="passwordEncoder" />
		<constructor-arg name="applicationName" value="${application.name}" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
	</bean>

	<bean id="dataSource" class="${rainbow.journal.jdbc.driverClassName}">
		<property name="url" value="${rainbow.journal.jdbc.url}" />
		<property name="user" value="${rainbow.journal.jdbc.user}" />
		<property name="password" value="${rainbow.journal.jdbc.password}" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="rainbowSecurityDataSource" class="${rainbow.security.jdbc.driverClassName}">
		<property name="url" value="${rainbow.security.jdbc.url}" />
		<property name="user" value="${rainbow.security.jdbc.user}" />
		<property name="password" value="${rainbow.security.jdbc.password}" />
	</bean>

	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath*:META-INF/journalPersistence.xml</value>
				<value>classpath*:META-INF/securityPersistence.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="dataSource" value-ref="dataSource" />
				<entry key="rainbowSecurityDataSource" value-ref="rainbowSecurityDataSource" />
			</map>
		</property>
		<property name="defaultPersistenceUnitRootLocation" value="classpath:" />
	</bean>

	<bean id="rainbowJournalEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="RainbowJournalPersistenceUnit" />
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>org.rainbow</value>
			</list>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.logging.level" value="ALL" />
				<entry key="javax.persistence.schema-generation.database.action"
					value="drop-and-create" />
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
			</bean>
		</property>
	</bean>

	<bean id="rainbowSecurityEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="RainbowSecurityPersistenceUnit" />
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
		<property name="packagesToScan">
			<list>
				<value>org.rainbow</value>
			</list>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.logging.level" value="ALL" />
				<entry key="javax.persistence.schema-generation.database.action"
					value="drop-and-create" />
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
			</bean>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->

	<bean id="rainbowJournalTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="rainbowJournalEntityManagerFactory" />
	</bean>

	<bean id="rainbowSecurityTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="rainbowSecurityEntityManagerFactory" />
		<property name="dataSource" ref="rainbowSecurityDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="rainbowSecurityTransactionManager" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="WEB-INF/application.properties" />
	</bean>

	<bean id="journalService" class="org.rainbow.journal.core.service.JournalService">
		<constructor-arg>
			<bean class="org.rainbow.journal.core.persistence.dao.JournalDao" />
		</constructor-arg>
	</bean>

	<bean id="publicationService" class="org.rainbow.journal.core.service.PublicationService">
		<constructor-arg>
			<bean class="org.rainbow.journal.core.persistence.dao.PublicationDao" />
		</constructor-arg>
	</bean>

	<bean id="profileService" class="org.rainbow.journal.core.service.ProfileService">
		<constructor-arg>
			<bean class="org.rainbow.journal.core.persistence.dao.ProfileDao" />
		</constructor-arg>
	</bean>

	<bean id="subscriptionService" class="org.rainbow.journal.core.service.SubscriptionService">
		<constructor-arg>
			<bean class="org.rainbow.journal.core.persistence.dao.SubscriptionDao" />
		</constructor-arg>
	</bean>
</beans>